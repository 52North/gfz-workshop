services:
  geoserver:
    image: docker.osgeo.org/geoserver:2.27.1
    environment:
      SKIP_DEMO_DATA: "true"
      INSTALL_EXTENSIONS: "true"
      #WEBAPP_CONTEXT: "geoserver"
      #PROXY_BASE_URL: "http://localhost:8080/geoserver"
      #ROOT_WEBAPP_REDIRECT: "true"
      STABLE_EXTENSIONS: "ogcapi-features,css,csw,csw-iso,wps,importer"
      CORS_ENABLED: "true"
      CORS_ALLOWED_ORIGINS: "*"
      COMMUNITY_EXTENSIONS: ""
      EXTRA_JAVA_OPTS: "-Xms1G -Xmx2G"
      GEOSERVER_ADMIN_USER: ${GEOSERVER_ADMIN_USER}
      GEOSERVER_ADMIN_PASSWORD: ${GEOSERVER_ADMIN_PASSWORD}
    volumes:
      - ./geoserver_data:/opt/geoserver_data/
      - geoserver_libs:/opt/additional_libs/
      - ./data:/data
    ports:
      - 8080:8080
    healthcheck:
      test: curl --fail "http://localhost:8080/geoserver/web/wicket/resource/org.geoserver.web.GeoServerBasePage/img/logo.png" || exit 1
      interval: 1m
      retries: 3
      timeout: 20s
  postgres:
    image: postgis/postgis:17-3.5-alpine
    shm_size: 128mb
    environment: &POSTGRES_ENV
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init/:/docker-entrypoint-initdb.d/:ro
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -h localhost -t 5 || exit 1
      interval: 10s
      retries: 5
      timeout: 10s
  pgadmin:
    image: dpage/pgadmin4:9.5
    environment:
      PGADMIN_DEFAULT_EMAIL: c.autermann@52north.org
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - 80:80
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    healthcheck:
      test: wget -O- http://localhost:80/misc/ping
      interval: 10s
      retries: 5
      timeout: 10s
  postgres-importer:
    image: ghcr.io/osgeo/gdal:alpine-small-latest
    restart: on-failure
    volumes:
      - ./data:/data:ro
    environment: *POSTGRES_ENV
    entrypoint: sh -ec
    command: 
    - | 
      ogr2ogr -f PostgreSQL \
        --config PG_USE_COPY=YES \
        postgresql://$${POSTGRES_USER}:$${POSTGRES_PASSWORD}@postgres:5432/$${POSTGRES_DB} \
        /data/buildings.geojson \
        -nln buildings \
        -lco "FID=id" \
        -lco "GEOMETRY_NAME=geom" \
        -overwrite 
      ogr2ogr -f PostgreSQL \
        --config PG_USE_COPY=YES \
        postgresql://$${POSTGRES_USER}:$${POSTGRES_PASSWORD}@postgres:5432/$${POSTGRES_DB} \
        /data/busstops.geojson \
        -nln busstops \
        -lco "FID=id" \
        -lco "GEOMETRY_NAME=geom" \
        -overwrite 
    depends_on:
      - postgres
  # geoserver-importer:
  #   image: alpine/curl:latest
  #   entrypoint: sh -ex
  #   restart: on-failure 
  #   command:
  #   - /geoserver-init.sh
  #   environment:
  #     GEOSERVER_URL: http://geoserver:8080/geoserver
  #     GEOSERVER_USERNAME: ${GEOSERVER_ADMIN_USER}
  #     GEOSERVER_PASSWORD: ${GEOSERVER_ADMIN_PASSWORD}
  #     PGHOST: postgres
  #     PGPORT: "5432"
  #     PGUSER: ${POSTGRES_USER}
  #     PGPASSWORD: ${POSTGRES_PASSWORD}
  #     PGDATABASE: ${POSTGRES_DB}
  #   volumes:
  #     - ./NavLog_Betrieb/dev/geoserver/geoserver-init.sh:/geoserver-init.sh
  #   depends_on:
  #     - geoserver
volumes:
  geoserver_data: {}
  geoserver_libs: {}
  postgres_data: {}
  pgadmin_data: {}
